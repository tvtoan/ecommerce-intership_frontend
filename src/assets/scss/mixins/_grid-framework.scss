@use "../variables" as *;
@use "breakpoints" as *;
@use "grid" as *;
@use "sass:map";

// Framework grid generation
//
// Used only by Bootstrap to generate the correct number of grid classes given
// any value of `$grid-columns`.
@mixin make-grid-columns(
  $columns: $grid-columns,
  $gutter: $grid-gutter-width,
  $breakpoints: $grid-breakpoints
) {
  // Common properties for all breakpoints
  %grid-column {
    position: relative;
    width: 100%;
    padding-right: $gutter / 2;
    padding-left: $gutter / 2;
  }

  @each $name-layout in map.keys($columns) {
    $column: map.get($columns, $name-layout);

    @each $breakpoint in map.keys($breakpoints) {
      $infix: breakpoint-infix($breakpoint, $breakpoints);
  
      // Allow columns to stretch full width below their breakpoints
      @for $i from 1 through $column {
        .#{$name-layout}-col#{$infix}-#{$i} {
          @extend %grid-column;
        }
      }
      .#{$name-layout}-col#{$infix},
      .#{$name-layout}-col#{$infix}-auto {
        @extend %grid-column;
      }
  
      @include media-breakpoint-up($breakpoint, $breakpoints) {
        // Provide basic `.col-{bp}` classes for equal-width flexbox columns
        .#{$name-layout}-col#{$infix} {
          flex-basis: 0;
          flex-grow: 1;
          max-width: 100%;
        }
        .#{$name-layout}-col#{$infix}-auto {
          flex: 0 0 auto;
          width: auto;
          max-width: 100%; // Reset earlier grid tiers
        }
  
        @for $i from 1 through $column {
          .#{$name-layout}-col#{$infix}-#{$i} {
            @include make-col($i, $column);
          }
        }
  
        // `$columns - 1` because offsetting by the width of an entire row isn't possible
        // @for $i from 0 through ($column - 1) {
        //   @if not($infix == "" and $i == 0) {
        //     // Avoid emitting useless .offset-0
        //     .#{$name-layout}-offset#{$infix}-#{$i} {
        //       @include make-col-offset($i, $column);
        //     }
        //   }
        // }
      }
    }
  }
}
